name: Manual Android with Capacitor
on:
  push:
    branches: [main, master]
    paths:
      - "android/**"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          components: |
            platforms;android-34
            build-tools;34.0.0
            cmdline-tools;latest
            patcher;v4

      - name: Install system tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y imagemagick unzip zipalign

      - name: Install React dependencies
        run: |
          npx npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          npm_config_legacy_peer_deps=true npm_config_fund=false npm install
          npm list vite || true

      - name: Build React project
        run: |
          npm run build

      - name: Sync and Install native plugins
        run: |
          set -e
          SRC_FAVICON=dist/favicon.png
          if [ ! -f "$SRC_FAVICON" ]; then
            SRC_FAVICON=dist/favicon.pg
          fi
          if [ ! -f "$SRC_FAVICON" ]; then
            SRC_FAVICON=dist/favicon.ico
          fi
          if [ ! -f "$SRC_FAVICON" ]; then
            echo "Favicon no encontrado en HCFront/dist. Abortando."
            exit 1
          fi
          RES_DIR=android/app/src/main/res
          mkdir -p "$RES_DIR"

          declare -A sizes=( ["mipmap-mdpi"]=48 ["mipmap-hdpi"]=72 ["mipmap-xhdpi"]=96 ["mipmap-xxhdpi"]=144 ["mipmap-xxxhdpi"]=192 )

          for folder in "${!sizes[@]}"; do
            size=${sizes[$folder]}
            target_dir="$RES_DIR/$folder"
            mkdir -p "$target_dir"
            convert "$SRC_FAVICON" -resize ${size}x${size} "$target_dir/ic_launcher_foreground.png"
            convert -size ${size}x${size} canvas:none "$target_dir/ic_launcher_background.png"
          done

          ADAPTIVE_DIR="$RES_DIR/mipmap-anydpi-v26"
          mkdir -p "$ADAPTIVE_DIR"
          cat > "$ADAPTIVE_DIR/ic_launcher.xml" <<'XML'
          <?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
          <background android:drawable="@mipmap/ic_launcher_background"/>
          <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
          </adaptive-icon>
          XML

          if [ -f "$ADAPTIVE_DIR/ic_launcher.png" ]; then
            rm -f "$ADAPTIVE_DIR/ic_launcher.png"
          fi
          
          npx cap copy android
          npx cap sync android

      - name: Ensure gradle wrapper executable
        working-directory: android
        run: |
          chmod +x ./gradlew

      - name: Build Android APK
        working-directory: android
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -e
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Locate release APK and expose path
        run: |
          set -e
          APK_DIR=android/app/build/outputs/apk/release
          ls -la "$APK_DIR" || true
          if [ -f "$APK_DIR/app-release.apk" ]; then
            APK_PATH="$APK_DIR/app-release.apk"
          elif [ -f "$APK_DIR/app-release-unsigned.apk" ]; then
            APK_PATH="$APK_DIR/app-release-unsigned.apk"
          else
            APK_PATH=$(ls "$APK_DIR"/*.apk 2>/dev/null | head -n1 || true)
          fi
          if [ -z "$APK_PATH" ]; then
            echo "No se encontrÃ³ APK de release en $APK_DIR"
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
          echo "Found APK: $APK_PATH"

      - name: Show final artifacts
        run: |
          set -e
          echo "APK_PATH: $APK_PATH" 
          ls -la android/app/build/outputs/apk/release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: HiveCash-app
          path: |            
            android/app/build/outputs/apk/release/*.apk
